[transmogrifier]
title = Message exporter
description = Exports archetype and dexterity content as email message
pipeline =
    brains
    type
    objects
    path
    filter_sport
    behead_sport
    rfc822
    clean
    invert
    producer

[brains]
blueprint = transmogrifier.from_expression
condition = path:item/_brain/_unrestrictedGetObject|nothing
_brain = path:context/portal_catalog/unrestrictedSearchResults

[type]
blueprint = transmogrifier.set
_type = path:item/_brain/portal_type

[objects]
blueprint = transmogrifier.set
_object = path:item/_brain/_unrestrictedGetObject

[path]
blueprint = transmogrifier.set
_path = python:'/'.join(item['_object'].getPhysicalPath())

[filter_sport]
blueprint = transmogrifier.filter
condition = python:item.get('_path').startswith('/jyu/sport/')

[behead_sport]
blueprint = transmogrifier.set
_path = python:item.get('_path')[len('/jyu/sport'):]

[rfc822]
blueprint = plone.rfc822.export
key = message

[clean]
blueprint = transmogrifier.del
keys = 
    _object
    _brain

[invert]
blueprint = transmogrifier.invert
key = message

[producer]
blueprint = rabbitpy.producer

[breakpoint]
blueprint = transmogrifier.breakpoint

[logger]
blueprint = transmogrifier.logger
name = logger
level = ERROR
