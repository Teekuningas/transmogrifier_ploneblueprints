# Usage:  bin/instance -OPlone run bin/transmogrify export.content --context=zope.component.hooks.getSite transmogrifier:prefix=/Plone/subsite
[transmogrifier]
title = RFC822 Content Export
description = Exports archetype and dexterity content via RFC822 marshall
pipeline =
    export.content.search
    export.content.get_path
    export.content.filter
    export.content.behead
    export.content.get_type
    export.content.get_object
    export.content.marshal
    export.content.cleanup
    export.content.invert
    export.content.produce
prefix =

[export.content.search]
blueprint = transmogrifier.from_expression
condition = path:item/_brain/_unrestrictedGetObject|nothing
_brain = path:context/portal_catalog/unrestrictedSearchResults

[export.content.get_path]
blueprint = transmogrifier.set
_path = path:item/_brain/getPath

[export.content.filter]
blueprint = transmogrifier.filter
condition = python:item.get('_path').startswith('${transmogrifier:prefix}/')

[export.content.behead]
blueprint = transmogrifier.set
_path = python:item.get('_path')[len('${transmogrifier:prefix}'):]

[export.content.get_type]
blueprint = transmogrifier.set
_type = path:item/_brain/portal_type

[export.content.get_object]
blueprint = transmogrifier.set
_object = path:item/_brain/_unrestrictedGetObject

[export.content.marshal]
blueprint = plone.rfc822.export
key = message

[export.content.invert]
blueprint = transmogrifier.invert
key = message

[export.content.cleanup]
blueprint = transmogrifier.del
keys = 
    _object
    _brain

[export.content.produce]
blueprint = rabbitpy.producer
routing_key = export.content
queue = export.content
queue_auto_declare = True
queue_auto_delete = False

[export.content.logger]
blueprint = transmogrifier.logger
name = export.content
level = ERROR

[export.content.breakpoint]
blueprint = transmogrifier.breakpoint
