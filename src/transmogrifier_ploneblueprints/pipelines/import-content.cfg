[transmogrifier]
title = Content importer
description = Creates content from email message
pipeline =
    consumer
    filter_supported
    folders
    set_class
    constructor
    remove_id
    update_content
    codec
    reindex
    commit

[consumer]
blueprint = rabbitpy.consumer
queue = import.sport
queue_auto_delete = false
ack = false

[filter_supported]
blueprint = transmogrifier.filter
condition = python:item['_type'] not in ['collective.roster.person', 'FormMailerAdapter', 'FormThanksPage', 'FormSaveDataAdapter']

[folders]
blueprint = plone.folders

[set_class]
blueprint = plone.change_class
types =
    Folder

[constructor]
blueprint = plone.constructor

[remove_id]
blueprint = transmogrifier.del
keys =
    id

[update_content]
blueprint = plone.rfc822.import

[codec]
blueprint = transmogrifier.codec
_path = unicode:utf-8

[reindex]
blueprint = transmogrifier.set
_tmp = python:context.unrestrictedTraverse(item['_path'][1:]).reindexObject()

[commit]
blueprint = transmogrifier.to_expression
modules = transaction
expression = python:modules['transaction'].commit()
mode = items

[breakpoint]
blueprint = transmogrifier.breakpoint

[logger]
blueprint = transmogrifier.logger
name = logger
level = ERROR
